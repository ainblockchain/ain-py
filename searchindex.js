Search.setIndex({"docnames": ["ain", "ain.account", "ain.ain", "ain.db", "ain.db.ref", "ain.errors", "ain.net", "ain.provider", "ain.types", "ain.utils", "ain.utils.v3keystore", "ain.wallet", "index"], "filenames": ["ain.rst", "ain.account.rst", "ain.ain.rst", "ain.db.rst", "ain.db.ref.rst", "ain.errors.rst", "ain.net.rst", "ain.provider.rst", "ain.types.rst", "ain.utils.rst", "ain.utils.v3keystore.rst", "ain.wallet.rst", "index.rst"], "titles": ["ain package", "ain.account module", "ain.ain module", "ain.db package", "ain.db.ref module", "ain.errors module", "ain.net module", "ain.provider module", "ain.types module", "ain.utils package", "ain.utils.v3keystore module", "ain.wallet module", "Welcome to ain-py\u2019s documentation!"], "terms": {"db": [0, 12], "util": [0, 12], "account": [0, 9, 12], "provid": [0, 3, 6, 9, 12], "net": [0, 12], "wallet": [0, 12], "type": [0, 1, 3, 4, 5, 6, 7, 9, 12], "error": [0, 12], "class": [1, 3, 4, 5, 6, 7, 8], "privatekei": [1, 9], "none": [1, 3, 4, 8, 9], "base": [1, 3, 4, 5, 6, 7, 8], "object": [1, 3, 4, 6, 7, 8, 9], "blockchain": [1, 5, 6, 7, 8, 9], "paramet": [1, 3, 4, 7, 8, 9], "union": [1, 8, 9], "byte": [1, 8, 9], "str": [1, 3, 4, 5, 6, 7, 8, 9], "The": [1, 3, 4, 5, 6, 7, 8, 9], "privat": [1, 9], "kei": [1, 4, 9], "classmethod": [1, 8], "creat": [1, 3, 4, 7, 9], "entropi": 1, "init": 1, "an": [1, 4, 5, 9], "given": [1, 3, 4, 9], "default": [1, 3, 4, 9], "frommnemon": 1, "mnemon": [1, 9], "index": [1, 9, 12], "0": [1, 9], "int": [1, 5, 8, 9], "address": [1, 8, 9], "private_kei": 1, "public_kei": 1, "public": [1, 9], "submodul": [3, 9, 12], "ref": [3, 8], "modul": [3, 9, 12], "content": [3, 9], "databas": [3, 4], "instanc": [3, 4, 6], "path": [3, 4, 8], "refer": [3, 4, 8], "option": [3, 4, 8], "you": [3, 4, 8, 9], "want": [3, 4, 8, 9], "If": [3, 4, 9], "i": [3, 4, 6, 9], "root": 3, "return": [3, 4, 6, 7, 9], "static": 4, "buildgetrequest": 4, "build": 4, "get": [4, 8, 9], "request": 4, "getoperationtyp": 4, "oper": [4, 8], "getopt": [4, 8], "thi": [4, 9], "transact": [4, 8, 9], "dict": [4, 7], "async": [4, 6, 7], "decrementvalu": 4, "transactioninput": [4, 8], "decrement": 4, "valu": [4, 8], "valueonlytransactioninput": [4, 8], "input": [4, 8, 9], "result": [4, 5, 7, 8], "ani": [4, 8], "deletevalu": 4, "delet": 4, "overwritten": 4, "null": 4, "evalown": 4, "param": [4, 7], "eval": [4, 8], "owner": [4, 8], "evalu": 4, "evalownerinput": [4, 8], "evalrul": 4, "rule": [4, 8, 9], "evalruleinput": [4, 8], "true": [4, 9], "satisfi": 4, "write": 4, "fals": [4, 9], "extendpath": 4, "basepath": 4, "extens": 4, "extend": 4, "under": 4, "A": [4, 9], "extendsetmultitransactioninput": 4, "set": [4, 8], "appropri": 4, "op_list": [4, 8], "setmultitransactioninput": [4, 8], "setmultioperationtyp": 4, "decor": 4, "extendsettransactioninput": 4, "isglob": 4, "setoperationtyp": 4, "function": [4, 9], "hash": [4, 8, 9], "multipl": [4, 8], "list": [4, 8, 9], "getoper": [4, 8], "arrai": 4, "could": 4, "one": [4, 9], "from": [4, 9], "func": 4, "combin": 4, "them": 4, "getfunct": 4, "config": 4, "self": 4, "getown": 4, "getrul": 4, "getvalu": 4, "incrementvalu": 4, "increment": 4, "matchfunct": 4, "match": [4, 8], "ar": [4, 9], "relat": 4, "matchinput": [4, 8], "matchown": 4, "matchrul": 4, "push": 4, "new": 4, "child": 4, "doesn": 4, "t": [4, 9], "pushvalu": 4, "sanitizeref": 4, "sanit": 4, "It": [4, 9], "should": [4, 9], "have": [4, 9], "slash": 4, "begin": 4, "end": 4, "process": 4, "setfunct": 4, "setisglob": 4, "global": 4, "flag": [4, 8], "bool": [4, 8, 9], "setown": 4, "setrul": 4, "setvalu": 4, "properti": 4, "except": 5, "blockchainerror": 5, "code": 5, "messag": [5, 9], "custom": 5, "api": [5, 7], "network": 6, "statu": 6, "checker": 6, "checkprotocolvers": 6, "check": [6, 9], "protocol": 6, "version": 6, "geteventhandlernetworkinfo": 6, "event": 6, "handler": 6, "inform": 6, "getnetworkid": 6, "id": [6, 9], "node": [6, 7], "connect": 6, "getpeercount": 6, "number": [6, 9], "peer": 6, "getprotocolvers": 6, "islisten": 6, "whether": [6, 9], "listen": 6, "issync": 6, "sync": 6, "protov": 6, "endpoint": 7, "send": 7, "rpcmethod": 7, "json": 7, "rpc": [7, 8], "payload": 7, "method": [7, 8, 9], "name": 7, "respons": 7, "apiendpoint": 7, "ainopt": 8, "rawresultmod": 8, "us": 8, "raw": 8, "mode": 8, "ecdsasignatur": [8, 9], "r": 8, "": [8, 9], "v": 8, "ecdsa": [8, 9], "signatur": [8, 9], "fromsignatur": 8, "convert": [8, 9], "format": 8, "eth_sign": 8, "eciesencrypt": [8, 9], "iv": 8, "ephempublickei": 8, "ciphertext": 8, "mac": 8, "eci": [8, 9], "encrypt": [8, 9], "permiss": 8, "is_glob": 8, "liter": 8, "branch_own": 8, "write_funct": 8, "write_own": 8, "write_rul": 8, "timestamp": [8, 9], "getmultioper": 8, "get_valu": 8, "get_rul": 8, "get_own": 8, "get_funct": 8, "is_fin": 8, "is_shallow": 8, "include_vers": 8, "include_tree_info": 8, "include_proof": 8, "setmultioper": 8, "setoper": 8, "parent_tx_hash": 8, "nonc": 8, "gas_pric": 8, "transactioninputbas": 8, "set_valu": 8, "inc_valu": 8, "dec_valu": 8, "set_rul": 8, "set_own": 8, "set_funct": 8, "tx_bodi": 8, "transactionbodi": [8, 9], "bill": 8, "transactionbodybas": 8, "bodi": [8, 9], "valueonlytransactionbodybas": 8, "onli": 8, "v3keystor": 9, "addhexprefix": 9, "add": 9, "hex": 9, "prefix": 9, "0x": 9, "string": 9, "doe": 9, "aresameaddress": 9, "address1": 9, "address2": 9, "two": 9, "same": 9, "first": 9, "second": 9, "bytestohex": 9, "decryptwithprivatekei": 9, "decrypt": 9, "data": 9, "ecrecoverpub": 9, "msghash": 9, "chainid": 9, "recov": 9, "chain": 9, "ecsignhash": 9, "ecsignmessag": 9, "sign": 9, "note": 9, "tobyt": 9, "unsupport": 9, "rais": 9, "typeerror": 9, "ecsigntransact": 9, "txdata": 9, "ecverifysig": 9, "verifi": 9, "valid": 9, "encodevarint": 9, "encod": 9, "bitcoin": 9, "variabl": 9, "length": 9, "integ": 9, "encryptwithpublickei": 9, "publickei": 9, "when": 9, "must": 9, "generatemnemon": 9, "gener": 9, "random": 9, "english": 9, "randomli": 9, "gettimestamp": 9, "current": 9, "hashmessag": 9, "varint": 9, "keccak": 9, "256": 9, "header": 9, "ainetwork": 9, "hashtransact": 9, "ishexprefix": 9, "ishexstr": 9, "isvalidaddress": 9, "isvalidpriv": 9, "follow": 9, "curv": 9, "secp256k1": 9, "isvalidpubl": 9, "issec1": 9, "meet": 9, "requir": 9, "sec1": 9, "bit": 9, "size": 9, "224": 9, "456": 9, "384": 9, "512": 9, "mnemonictoprivatekei": 9, "padtoeven": 9, "pad": 9, "lead": 9, "zero": 9, "even": 9, "odd": 9, "itself": 9, "privatetoaddress": 9, "checksum": 9, "privatetopubl": 9, "pubtoaddress": 9, "which": 9, "lower": 9, "160": 9, "striphexprefix": 9, "strip": 9, "attempt": 9, "equival": 9, "tobuff": 9, "ainblockchain": 9, "support": 9, "tochecksumaddress": 9, "isn": 9, "valueerror": 9, "packag": 12, "subpackag": 12, "search": 12, "page": 12}, "objects": {"": [[0, 0, 0, "-", "ain"]], "ain": [[1, 0, 0, "-", "account"], [3, 0, 0, "-", "db"], [5, 0, 0, "-", "errors"], [6, 0, 0, "-", "net"], [7, 0, 0, "-", "provider"], [8, 0, 0, "-", "types"], [9, 0, 0, "-", "utils"]], "ain.account": [[1, 1, 1, "", "Account"]], "ain.account.Account": [[1, 2, 1, "", "address"], [1, 3, 1, "", "create"], [1, 3, 1, "", "fromMnemonic"], [1, 2, 1, "", "private_key"], [1, 2, 1, "", "public_key"]], "ain.db": [[3, 1, 1, "", "Database"], [4, 0, 0, "-", "ref"]], "ain.db.Database": [[3, 3, 1, "", "ref"]], "ain.db.ref": [[4, 1, 1, "", "Reference"]], "ain.db.ref.Reference": [[4, 3, 1, "", "buildGetRequest"], [4, 3, 1, "", "decrementValue"], [4, 3, 1, "", "deleteValue"], [4, 3, 1, "", "evalOwner"], [4, 3, 1, "", "evalRule"], [4, 3, 1, "", "extendPath"], [4, 3, 1, "", "extendSetMultiTransactionInput"], [4, 3, 1, "", "extendSetTransactionInput"], [4, 3, 1, "", "get"], [4, 3, 1, "", "getFunction"], [4, 3, 1, "", "getOwner"], [4, 3, 1, "", "getRule"], [4, 3, 1, "", "getValue"], [4, 3, 1, "", "incrementValue"], [4, 4, 1, "", "key"], [4, 3, 1, "", "matchFunction"], [4, 3, 1, "", "matchOwner"], [4, 3, 1, "", "matchRule"], [4, 4, 1, "", "path"], [4, 3, 1, "", "push"], [4, 3, 1, "", "pushValue"], [4, 3, 1, "", "sanitizeRef"], [4, 3, 1, "", "set"], [4, 3, 1, "", "setFunction"], [4, 3, 1, "", "setIsGlobal"], [4, 3, 1, "", "setOwner"], [4, 3, 1, "", "setRule"], [4, 3, 1, "", "setValue"]], "ain.errors": [[5, 5, 1, "", "BlockchainError"]], "ain.errors.BlockchainError": [[5, 2, 1, "", "code"], [5, 2, 1, "", "message"]], "ain.net": [[6, 1, 1, "", "Network"]], "ain.net.Network": [[6, 3, 1, "", "checkProtocolVersion"], [6, 3, 1, "", "getEventHandlerNetworkInfo"], [6, 3, 1, "", "getNetworkId"], [6, 3, 1, "", "getPeerCount"], [6, 3, 1, "", "getProtocolVersion"], [6, 3, 1, "", "isListening"], [6, 3, 1, "", "isSyncing"], [6, 2, 1, "", "protoVer"], [6, 2, 1, "", "provider"]], "ain.provider": [[7, 1, 1, "", "Provider"]], "ain.provider.Provider": [[7, 2, 1, "", "apiEndPoint"], [7, 2, 1, "", "endPoint"], [7, 3, 1, "", "send"]], "ain.types": [[8, 1, 1, "", "AinOptions"], [8, 1, 1, "", "ECDSASignature"], [8, 1, 1, "", "ECIESEncrypted"], [8, 1, 1, "", "EvalOwnerInput"], [8, 1, 1, "", "EvalRuleInput"], [8, 1, 1, "", "GetMultiOperation"], [8, 1, 1, "", "GetOperation"], [8, 1, 1, "", "GetOptions"], [8, 1, 1, "", "MatchInput"], [8, 1, 1, "", "SetMultiOperation"], [8, 1, 1, "", "SetMultiTransactionInput"], [8, 1, 1, "", "SetOperation"], [8, 1, 1, "", "Transaction"], [8, 1, 1, "", "TransactionBody"], [8, 1, 1, "", "TransactionBodyBase"], [8, 1, 1, "", "TransactionInput"], [8, 1, 1, "", "TransactionInputBase"], [8, 1, 1, "", "ValueOnlyTransactionBodyBase"], [8, 1, 1, "", "ValueOnlyTransactionInput"]], "ain.types.AinOptions": [[8, 2, 1, "", "rawResultMode"]], "ain.types.ECDSASignature": [[8, 3, 1, "", "fromSignature"], [8, 2, 1, "", "r"], [8, 2, 1, "", "s"], [8, 2, 1, "", "v"]], "ain.types.ECIESEncrypted": [[8, 2, 1, "", "ciphertext"], [8, 2, 1, "", "ephemPublicKey"], [8, 2, 1, "", "iv"], [8, 2, 1, "", "mac"]], "ain.types.EvalOwnerInput": [[8, 2, 1, "", "address"], [8, 2, 1, "", "is_global"], [8, 2, 1, "", "permission"], [8, 2, 1, "", "ref"]], "ain.types.EvalRuleInput": [[8, 2, 1, "", "address"], [8, 2, 1, "", "is_global"], [8, 2, 1, "", "ref"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "value"]], "ain.types.GetMultiOperation": [[8, 2, 1, "", "op_list"], [8, 2, 1, "", "type"]], "ain.types.GetOperation": [[8, 2, 1, "", "is_global"], [8, 2, 1, "", "ref"], [8, 2, 1, "", "type"]], "ain.types.GetOptions": [[8, 2, 1, "", "include_proof"], [8, 2, 1, "", "include_tree_info"], [8, 2, 1, "", "include_version"], [8, 2, 1, "", "is_final"], [8, 2, 1, "", "is_global"], [8, 2, 1, "", "is_shallow"]], "ain.types.MatchInput": [[8, 2, 1, "", "is_global"], [8, 2, 1, "", "ref"]], "ain.types.SetMultiOperation": [[8, 2, 1, "", "op_list"], [8, 2, 1, "", "type"]], "ain.types.SetMultiTransactionInput": [[8, 2, 1, "", "address"], [8, 2, 1, "", "gas_price"], [8, 2, 1, "", "nonce"], [8, 2, 1, "", "op_list"], [8, 2, 1, "", "parent_tx_hash"], [8, 2, 1, "", "timestamp"]], "ain.types.SetOperation": [[8, 2, 1, "", "is_global"], [8, 2, 1, "", "ref"], [8, 2, 1, "", "type"], [8, 2, 1, "", "value"]], "ain.types.Transaction": [[8, 2, 1, "", "address"], [8, 2, 1, "", "hash"], [8, 2, 1, "", "signature"], [8, 2, 1, "", "tx_body"]], "ain.types.TransactionBody": [[8, 2, 1, "", "billing"], [8, 2, 1, "", "gas_price"], [8, 2, 1, "", "nonce"], [8, 2, 1, "", "operation"], [8, 2, 1, "", "parent_tx_hash"], [8, 2, 1, "", "timestamp"]], "ain.types.TransactionBodyBase": [[8, 2, 1, "", "operation"], [8, 2, 1, "", "parent_tx_hash"]], "ain.types.TransactionInput": [[8, 2, 1, "", "address"], [8, 2, 1, "", "gas_price"], [8, 2, 1, "", "nonce"], [8, 2, 1, "", "operation"], [8, 2, 1, "", "parent_tx_hash"], [8, 2, 1, "", "timestamp"]], "ain.types.TransactionInputBase": [[8, 2, 1, "", "address"], [8, 2, 1, "", "gas_price"], [8, 2, 1, "", "nonce"], [8, 2, 1, "", "timestamp"]], "ain.types.ValueOnlyTransactionBodyBase": [[8, 2, 1, "", "is_global"], [8, 2, 1, "", "parent_tx_hash"], [8, 2, 1, "", "ref"], [8, 2, 1, "", "value"]], "ain.types.ValueOnlyTransactionInput": [[8, 2, 1, "", "address"], [8, 2, 1, "", "gas_price"], [8, 2, 1, "", "is_global"], [8, 2, 1, "", "nonce"], [8, 2, 1, "", "parent_tx_hash"], [8, 2, 1, "", "ref"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "value"]], "ain.utils": [[9, 6, 1, "", "addHexPrefix"], [9, 6, 1, "", "areSameAddresses"], [9, 6, 1, "", "bytesToHex"], [9, 6, 1, "", "decryptWithPrivateKey"], [9, 6, 1, "", "ecRecoverPub"], [9, 6, 1, "", "ecSignHash"], [9, 6, 1, "", "ecSignMessage"], [9, 6, 1, "", "ecSignTransaction"], [9, 6, 1, "", "ecVerifySig"], [9, 6, 1, "", "encodeVarInt"], [9, 6, 1, "", "encryptWithPublicKey"], [9, 6, 1, "", "generateMnemonic"], [9, 6, 1, "", "getTimestamp"], [9, 6, 1, "", "hashMessage"], [9, 6, 1, "", "hashTransaction"], [9, 6, 1, "", "isHexPrefixed"], [9, 6, 1, "", "isHexString"], [9, 6, 1, "", "isValidAddress"], [9, 6, 1, "", "isValidPrivate"], [9, 6, 1, "", "isValidPublic"], [9, 6, 1, "", "keccak"], [9, 6, 1, "", "mnemonicToPrivatekey"], [9, 6, 1, "", "padToEven"], [9, 6, 1, "", "privateToAddress"], [9, 6, 1, "", "privateToPublic"], [9, 6, 1, "", "pubToAddress"], [9, 6, 1, "", "stripHexPrefix"], [9, 6, 1, "", "toBytes"], [9, 6, 1, "", "toChecksumAddress"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"ain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "packag": [0, 3, 9], "subpackag": 0, "submodul": 0, "modul": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11], "content": [0, 12], "account": 1, "db": [3, 4], "ref": 4, "error": 5, "net": 6, "provid": 7, "type": 8, "util": [9, 10], "v3keystor": 10, "wallet": 11, "welcom": 12, "py": 12, "": 12, "document": 12, "indic": 12, "tabl": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"ain package": [[0, "ain-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"]], "Module contents": [[0, "module-ain"]], "ain.account module": [[1, "module-ain.account"]], "ain.ain module": [[2, "ain-ain-module"]], "ain.db package": [[3, "ain-db-package"]], "ain.db.ref module": [[4, "module-ain.db.ref"]], "ain.errors module": [[5, "module-ain.errors"]], "ain.net module": [[6, "module-ain.net"]], "ain.provider module": [[7, "module-ain.provider"]], "ain.types module": [[8, "module-ain.types"]], "ain.utils package": [[9, "ain-utils-package"]], "ain.utils.v3keystore module": [[10, "ain-utils-v3keystore-module"]], "ain.wallet module": [[11, "ain-wallet-module"]], "Welcome to ain-py\u2019s documentation!": [[12, "welcome-to-ain-py-s-documentation"]], "Contents:": [[12, null]], "Indices and tables": [[12, "indices-and-tables"]]}, "indexentries": {"ain": [[0, "module-ain"]], "module": [[0, "module-ain"], [1, "module-ain.account"], [3, "module-ain.db"], [4, "module-ain.db.ref"], [5, "module-ain.errors"], [6, "module-ain.net"], [7, "module-ain.provider"], [8, "module-ain.types"], [9, "module-ain.utils"]], "account (class in ain.account)": [[1, "ain.account.Account"]], "address (ain.account.account attribute)": [[1, "ain.account.Account.address"]], "ain.account": [[1, "module-ain.account"]], "create() (ain.account.account class method)": [[1, "ain.account.Account.create"]], "frommnemonic() (ain.account.account class method)": [[1, "ain.account.Account.fromMnemonic"]], "private_key (ain.account.account attribute)": [[1, "ain.account.Account.private_key"]], "public_key (ain.account.account attribute)": [[1, "ain.account.Account.public_key"]], "database (class in ain.db)": [[3, "ain.db.Database"]], "ain.db": [[3, "module-ain.db"]], "ref() (ain.db.database method)": [[3, "ain.db.Database.ref"]], "reference (class in ain.db.ref)": [[4, "ain.db.ref.Reference"]], "ain.db.ref": [[4, "module-ain.db.ref"]], "buildgetrequest() (ain.db.ref.reference static method)": [[4, "ain.db.ref.Reference.buildGetRequest"]], "decrementvalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.decrementValue"]], "deletevalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.deleteValue"]], "evalowner() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.evalOwner"]], "evalrule() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.evalRule"]], "extendpath() (ain.db.ref.reference static method)": [[4, "ain.db.ref.Reference.extendPath"]], "extendsetmultitransactioninput() (ain.db.ref.reference static method)": [[4, "ain.db.ref.Reference.extendSetMultiTransactionInput"]], "extendsettransactioninput() (ain.db.ref.reference static method)": [[4, "ain.db.ref.Reference.extendSetTransactionInput"]], "get() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.get"]], "getfunction() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.getFunction"]], "getowner() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.getOwner"]], "getrule() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.getRule"]], "getvalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.getValue"]], "incrementvalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.incrementValue"]], "key (ain.db.ref.reference property)": [[4, "ain.db.ref.Reference.key"]], "matchfunction() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.matchFunction"]], "matchowner() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.matchOwner"]], "matchrule() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.matchRule"]], "path (ain.db.ref.reference property)": [[4, "ain.db.ref.Reference.path"]], "push() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.push"]], "pushvalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.pushValue"]], "sanitizeref() (ain.db.ref.reference static method)": [[4, "ain.db.ref.Reference.sanitizeRef"]], "set() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.set"]], "setfunction() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.setFunction"]], "setisglobal() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.setIsGlobal"]], "setowner() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.setOwner"]], "setrule() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.setRule"]], "setvalue() (ain.db.ref.reference method)": [[4, "ain.db.ref.Reference.setValue"]], "blockchainerror": [[5, "ain.errors.BlockchainError"]], "ain.errors": [[5, "module-ain.errors"]], "code (ain.errors.blockchainerror attribute)": [[5, "ain.errors.BlockchainError.code"]], "message (ain.errors.blockchainerror attribute)": [[5, "ain.errors.BlockchainError.message"]], "network (class in ain.net)": [[6, "ain.net.Network"]], "ain.net": [[6, "module-ain.net"]], "checkprotocolversion() (ain.net.network method)": [[6, "ain.net.Network.checkProtocolVersion"]], "geteventhandlernetworkinfo() (ain.net.network method)": [[6, "ain.net.Network.getEventHandlerNetworkInfo"]], "getnetworkid() (ain.net.network method)": [[6, "ain.net.Network.getNetworkId"]], "getpeercount() (ain.net.network method)": [[6, "ain.net.Network.getPeerCount"]], "getprotocolversion() (ain.net.network method)": [[6, "ain.net.Network.getProtocolVersion"]], "islistening() (ain.net.network method)": [[6, "ain.net.Network.isListening"]], "issyncing() (ain.net.network method)": [[6, "ain.net.Network.isSyncing"]], "protover (ain.net.network attribute)": [[6, "ain.net.Network.protoVer"]], "provider (ain.net.network attribute)": [[6, "ain.net.Network.provider"]], "provider (class in ain.provider)": [[7, "ain.provider.Provider"]], "ain.provider": [[7, "module-ain.provider"]], "apiendpoint (ain.provider.provider attribute)": [[7, "ain.provider.Provider.apiEndPoint"]], "endpoint (ain.provider.provider attribute)": [[7, "ain.provider.Provider.endPoint"]], "send() (ain.provider.provider method)": [[7, "ain.provider.Provider.send"]], "ainoptions (class in ain.types)": [[8, "ain.types.AinOptions"]], "ecdsasignature (class in ain.types)": [[8, "ain.types.ECDSASignature"]], "eciesencrypted (class in ain.types)": [[8, "ain.types.ECIESEncrypted"]], "evalownerinput (class in ain.types)": [[8, "ain.types.EvalOwnerInput"]], "evalruleinput (class in ain.types)": [[8, "ain.types.EvalRuleInput"]], "getmultioperation (class in ain.types)": [[8, "ain.types.GetMultiOperation"]], "getoperation (class in ain.types)": [[8, "ain.types.GetOperation"]], "getoptions (class in ain.types)": [[8, "ain.types.GetOptions"]], "matchinput (class in ain.types)": [[8, "ain.types.MatchInput"]], "setmultioperation (class in ain.types)": [[8, "ain.types.SetMultiOperation"]], "setmultitransactioninput (class in ain.types)": [[8, "ain.types.SetMultiTransactionInput"]], "setoperation (class in ain.types)": [[8, "ain.types.SetOperation"]], "transaction (class in ain.types)": [[8, "ain.types.Transaction"]], "transactionbody (class in ain.types)": [[8, "ain.types.TransactionBody"]], "transactionbodybase (class in ain.types)": [[8, "ain.types.TransactionBodyBase"]], "transactioninput (class in ain.types)": [[8, "ain.types.TransactionInput"]], "transactioninputbase (class in ain.types)": [[8, "ain.types.TransactionInputBase"]], "valueonlytransactionbodybase (class in ain.types)": [[8, "ain.types.ValueOnlyTransactionBodyBase"]], "valueonlytransactioninput (class in ain.types)": [[8, "ain.types.ValueOnlyTransactionInput"]], "address (ain.types.evalownerinput attribute)": [[8, "ain.types.EvalOwnerInput.address"]], "address (ain.types.evalruleinput attribute)": [[8, "ain.types.EvalRuleInput.address"]], "address (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.address"]], "address (ain.types.transaction attribute)": [[8, "ain.types.Transaction.address"]], "address (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.address"]], "address (ain.types.transactioninputbase attribute)": [[8, "ain.types.TransactionInputBase.address"]], "address (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.address"]], "ain.types": [[8, "module-ain.types"]], "billing (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.billing"]], "ciphertext (ain.types.eciesencrypted attribute)": [[8, "ain.types.ECIESEncrypted.ciphertext"]], "ephempublickey (ain.types.eciesencrypted attribute)": [[8, "ain.types.ECIESEncrypted.ephemPublicKey"]], "fromsignature() (ain.types.ecdsasignature class method)": [[8, "ain.types.ECDSASignature.fromSignature"]], "gas_price (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.gas_price"]], "gas_price (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.gas_price"]], "gas_price (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.gas_price"]], "gas_price (ain.types.transactioninputbase attribute)": [[8, "ain.types.TransactionInputBase.gas_price"]], "gas_price (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.gas_price"]], "hash (ain.types.transaction attribute)": [[8, "ain.types.Transaction.hash"]], "include_proof (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.include_proof"]], "include_tree_info (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.include_tree_info"]], "include_version (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.include_version"]], "is_final (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.is_final"]], "is_global (ain.types.evalownerinput attribute)": [[8, "ain.types.EvalOwnerInput.is_global"]], "is_global (ain.types.evalruleinput attribute)": [[8, "ain.types.EvalRuleInput.is_global"]], "is_global (ain.types.getoperation attribute)": [[8, "ain.types.GetOperation.is_global"]], "is_global (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.is_global"]], "is_global (ain.types.matchinput attribute)": [[8, "ain.types.MatchInput.is_global"]], "is_global (ain.types.setoperation attribute)": [[8, "ain.types.SetOperation.is_global"]], "is_global (ain.types.valueonlytransactionbodybase attribute)": [[8, "ain.types.ValueOnlyTransactionBodyBase.is_global"]], "is_global (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.is_global"]], "is_shallow (ain.types.getoptions attribute)": [[8, "ain.types.GetOptions.is_shallow"]], "iv (ain.types.eciesencrypted attribute)": [[8, "ain.types.ECIESEncrypted.iv"]], "mac (ain.types.eciesencrypted attribute)": [[8, "ain.types.ECIESEncrypted.mac"]], "nonce (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.nonce"]], "nonce (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.nonce"]], "nonce (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.nonce"]], "nonce (ain.types.transactioninputbase attribute)": [[8, "ain.types.TransactionInputBase.nonce"]], "nonce (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.nonce"]], "op_list (ain.types.getmultioperation attribute)": [[8, "ain.types.GetMultiOperation.op_list"]], "op_list (ain.types.setmultioperation attribute)": [[8, "ain.types.SetMultiOperation.op_list"]], "op_list (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.op_list"]], "operation (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.operation"]], "operation (ain.types.transactionbodybase attribute)": [[8, "ain.types.TransactionBodyBase.operation"]], "operation (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.operation"]], "parent_tx_hash (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.parent_tx_hash"]], "parent_tx_hash (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.parent_tx_hash"]], "parent_tx_hash (ain.types.transactionbodybase attribute)": [[8, "ain.types.TransactionBodyBase.parent_tx_hash"]], "parent_tx_hash (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.parent_tx_hash"]], "parent_tx_hash (ain.types.valueonlytransactionbodybase attribute)": [[8, "ain.types.ValueOnlyTransactionBodyBase.parent_tx_hash"]], "parent_tx_hash (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.parent_tx_hash"]], "permission (ain.types.evalownerinput attribute)": [[8, "ain.types.EvalOwnerInput.permission"]], "r (ain.types.ecdsasignature attribute)": [[8, "ain.types.ECDSASignature.r"]], "rawresultmode (ain.types.ainoptions attribute)": [[8, "ain.types.AinOptions.rawResultMode"]], "ref (ain.types.evalownerinput attribute)": [[8, "ain.types.EvalOwnerInput.ref"]], "ref (ain.types.evalruleinput attribute)": [[8, "ain.types.EvalRuleInput.ref"]], "ref (ain.types.getoperation attribute)": [[8, "ain.types.GetOperation.ref"]], "ref (ain.types.matchinput attribute)": [[8, "ain.types.MatchInput.ref"]], "ref (ain.types.setoperation attribute)": [[8, "ain.types.SetOperation.ref"]], "ref (ain.types.valueonlytransactionbodybase attribute)": [[8, "ain.types.ValueOnlyTransactionBodyBase.ref"]], "ref (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.ref"]], "s (ain.types.ecdsasignature attribute)": [[8, "ain.types.ECDSASignature.s"]], "signature (ain.types.transaction attribute)": [[8, "ain.types.Transaction.signature"]], "timestamp (ain.types.evalruleinput attribute)": [[8, "ain.types.EvalRuleInput.timestamp"]], "timestamp (ain.types.setmultitransactioninput attribute)": [[8, "ain.types.SetMultiTransactionInput.timestamp"]], "timestamp (ain.types.transactionbody attribute)": [[8, "ain.types.TransactionBody.timestamp"]], "timestamp (ain.types.transactioninput attribute)": [[8, "ain.types.TransactionInput.timestamp"]], "timestamp (ain.types.transactioninputbase attribute)": [[8, "ain.types.TransactionInputBase.timestamp"]], "timestamp (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.timestamp"]], "tx_body (ain.types.transaction attribute)": [[8, "ain.types.Transaction.tx_body"]], "type (ain.types.getmultioperation attribute)": [[8, "ain.types.GetMultiOperation.type"]], "type (ain.types.getoperation attribute)": [[8, "ain.types.GetOperation.type"]], "type (ain.types.setmultioperation attribute)": [[8, "ain.types.SetMultiOperation.type"]], "type (ain.types.setoperation attribute)": [[8, "ain.types.SetOperation.type"]], "v (ain.types.ecdsasignature attribute)": [[8, "ain.types.ECDSASignature.v"]], "value (ain.types.evalruleinput attribute)": [[8, "ain.types.EvalRuleInput.value"]], "value (ain.types.setoperation attribute)": [[8, "ain.types.SetOperation.value"]], "value (ain.types.valueonlytransactionbodybase attribute)": [[8, "ain.types.ValueOnlyTransactionBodyBase.value"]], "value (ain.types.valueonlytransactioninput attribute)": [[8, "ain.types.ValueOnlyTransactionInput.value"]], "addhexprefix() (in module ain.utils)": [[9, "ain.utils.addHexPrefix"]], "ain.utils": [[9, "module-ain.utils"]], "aresameaddresses() (in module ain.utils)": [[9, "ain.utils.areSameAddresses"]], "bytestohex() (in module ain.utils)": [[9, "ain.utils.bytesToHex"]], "decryptwithprivatekey() (in module ain.utils)": [[9, "ain.utils.decryptWithPrivateKey"]], "ecrecoverpub() (in module ain.utils)": [[9, "ain.utils.ecRecoverPub"]], "ecsignhash() (in module ain.utils)": [[9, "ain.utils.ecSignHash"]], "ecsignmessage() (in module ain.utils)": [[9, "ain.utils.ecSignMessage"]], "ecsigntransaction() (in module ain.utils)": [[9, "ain.utils.ecSignTransaction"]], "ecverifysig() (in module ain.utils)": [[9, "ain.utils.ecVerifySig"]], "encodevarint() (in module ain.utils)": [[9, "ain.utils.encodeVarInt"]], "encryptwithpublickey() (in module ain.utils)": [[9, "ain.utils.encryptWithPublicKey"]], "generatemnemonic() (in module ain.utils)": [[9, "ain.utils.generateMnemonic"]], "gettimestamp() (in module ain.utils)": [[9, "ain.utils.getTimestamp"]], "hashmessage() (in module ain.utils)": [[9, "ain.utils.hashMessage"]], "hashtransaction() (in module ain.utils)": [[9, "ain.utils.hashTransaction"]], "ishexprefixed() (in module ain.utils)": [[9, "ain.utils.isHexPrefixed"]], "ishexstring() (in module ain.utils)": [[9, "ain.utils.isHexString"]], "isvalidaddress() (in module ain.utils)": [[9, "ain.utils.isValidAddress"]], "isvalidprivate() (in module ain.utils)": [[9, "ain.utils.isValidPrivate"]], "isvalidpublic() (in module ain.utils)": [[9, "ain.utils.isValidPublic"]], "keccak() (in module ain.utils)": [[9, "ain.utils.keccak"]], "mnemonictoprivatekey() (in module ain.utils)": [[9, "ain.utils.mnemonicToPrivatekey"]], "padtoeven() (in module ain.utils)": [[9, "ain.utils.padToEven"]], "privatetoaddress() (in module ain.utils)": [[9, "ain.utils.privateToAddress"]], "privatetopublic() (in module ain.utils)": [[9, "ain.utils.privateToPublic"]], "pubtoaddress() (in module ain.utils)": [[9, "ain.utils.pubToAddress"]], "striphexprefix() (in module ain.utils)": [[9, "ain.utils.stripHexPrefix"]], "tobytes() (in module ain.utils)": [[9, "ain.utils.toBytes"]], "tochecksumaddress() (in module ain.utils)": [[9, "ain.utils.toChecksumAddress"]]}})